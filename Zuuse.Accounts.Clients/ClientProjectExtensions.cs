// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Zuuse.Accounts.Client
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ClientProject.
    /// </summary>
    public static partial class ClientProjectExtensions
    {
            /// <summary>
            /// Use `GET /clients/{client}` endpoint instead
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='clientProjectId'>
            /// </param>
            [System.Obsolete("This operation is deprecated. Please do not use it any longer.")]
            public static object PostGetClientProjectId(this IClientProject operations, string clientProjectId)
            {
                return operations.PostGetClientProjectIdAsync(clientProjectId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Use `GET /clients/{client}` endpoint instead
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='clientProjectId'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            [System.Obsolete("This operation is deprecated. Please do not use it any longer.")]
            public static async Task<object> PostGetClientProjectIdAsync(this IClientProject operations, string clientProjectId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PostGetClientProjectIdWithHttpMessagesAsync(clientProjectId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Use `GET /clients` endpoint instead
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='clientProjectIds'>
            /// </param>
            [System.Obsolete("This operation is deprecated. Please do not use it any longer.")]
            public static object PostGetClientProjectGuid(this IClientProject operations, ClientProjectIds clientProjectIds)
            {
                return operations.PostGetClientProjectGuidAsync(clientProjectIds).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Use `GET /clients` endpoint instead
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='clientProjectIds'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            [System.Obsolete("This operation is deprecated. Please do not use it any longer.")]
            public static async Task<object> PostGetClientProjectGuidAsync(this IClientProject operations, ClientProjectIds clientProjectIds, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PostGetClientProjectGuidWithHttpMessagesAsync(clientProjectIds, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Use `PUT /clients/{client}` endpoint instead
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// </param>
            [System.Obsolete("This operation is deprecated. Please do not use it any longer.")]
            public static object PostCreateClientProject(this IClientProject operations, ClientProjectRequest request)
            {
                return operations.PostCreateClientProjectAsync(request).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Use `PUT /clients/{client}` endpoint instead
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            [System.Obsolete("This operation is deprecated. Please do not use it any longer.")]
            public static async Task<object> PostCreateClientProjectAsync(this IClientProject operations, ClientProjectRequest request, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PostCreateClientProjectWithHttpMessagesAsync(request, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
