// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Zuuse.Accounts.Client.Models
{
    /// <summary> The PublicAccount. </summary>
    public partial class PublicAccount
    {
        /// <summary> Initializes a new instance of PublicAccount. </summary>
        /// <param name="id"> . </param>
        /// <param name="identifier"> . </param>
        /// <param name="displayName"> . </param>
        /// <param name="clientShortName"> . </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="identifier"/>, <paramref name="displayName"/>, or <paramref name="clientShortName"/> is null. </exception>
        public PublicAccount(string id, string identifier, string displayName, string clientShortName)
        {
            if (id == null)
            {
                throw new ArgumentNullException(nameof(id));
            }
            if (identifier == null)
            {
                throw new ArgumentNullException(nameof(identifier));
            }
            if (displayName == null)
            {
                throw new ArgumentNullException(nameof(displayName));
            }
            if (clientShortName == null)
            {
                throw new ArgumentNullException(nameof(clientShortName));
            }

            Id = id;
            Identifier = identifier;
            DisplayName = displayName;
            ClientShortName = clientShortName;
            Tags = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of PublicAccount. </summary>
        /// <param name="id"> . </param>
        /// <param name="identifier"> . </param>
        /// <param name="displayName"> . </param>
        /// <param name="email"> . </param>
        /// <param name="phone"> . </param>
        /// <param name="clientShortName"> . </param>
        /// <param name="roles"> . </param>
        /// <param name="from"> . </param>
        /// <param name="to"> . </param>
        /// <param name="tags"> . </param>
        internal PublicAccount(string id, string identifier, string displayName, string email, string phone, string clientShortName, RoleCollection roles, DateTimeOffset? @from, DateTimeOffset? to, IList<string> tags)
        {
            Id = id;
            Identifier = identifier;
            DisplayName = displayName;
            Email = email;
            Phone = phone;
            ClientShortName = clientShortName;
            Roles = roles;
            From = @from;
            To = to;
            Tags = tags;
        }

        public string Id { get; set; }
        public string Identifier { get; set; }
        public string DisplayName { get; set; }
        public string Email { get; set; }
        public string Phone { get; set; }
        public string ClientShortName { get; set; }
        public RoleCollection Roles { get; set; }
        public DateTimeOffset? From { get; set; }
        public DateTimeOffset? To { get; set; }
        public IList<string> Tags { get; }
    }
}
